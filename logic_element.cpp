#include "logic_element.h"
#include "storage_element.h"

/******************************************************************************
* LOGIC PELLET :: ADVANCE
******************************************************************************/
void LogicPellet::advance(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC PELLET :: TURN
******************************************************************************/
void LogicPellet::turn(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC BOMB :: ADVANCE
******************************************************************************/
void LogicBomb::advance(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC BOMB :: TURN
******************************************************************************/
void LogicBomb::turn(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC SHRAPNEL :: ADVANCE
******************************************************************************/
void LogiciShrapnel::advance(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC SHRAPNEL :: TURN
******************************************************************************/
void LogiciShrapnel::turn(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC MISSILE :: ADVANCE
******************************************************************************/
void LogicMissile::advance(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC MISSILE :: TURN
******************************************************************************/
void LogicMissile::turn(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC STANDARD :: ADVANCE
******************************************************************************/
void LogicStandard::advance(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC STANDARD :: TURN
******************************************************************************/
void LogicStandard::turn(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC FLOATER :: ADVANCE
******************************************************************************/
void LogicFloater::advance(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC FLOATER :: TURN
******************************************************************************/
void LogicFloater::turn(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC CRAZY :: ADVANCE
******************************************************************************/
void LogicCrazy::advance(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC CRAZY :: TURN
******************************************************************************/
void LogicCrazy::turn(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC SINKER :: ADVANCE
******************************************************************************/
void LogicSinker::advance(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC SINKER :: TURN
******************************************************************************/
void LogicSinker::turn(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC FRAGMENT :: ADVANCE
******************************************************************************/
void LogicFragment::advance(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC FRAGMENT :: TURN
******************************************************************************/
void LogicFragment::turn(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC STREAK :: ADVANCE
******************************************************************************/
void LogicStreak::advance(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC STREAK :: TURN
******************************************************************************/
void LogicStreak::turn(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC EXHAUST :: ADVANCE
******************************************************************************/
void LogicExhaust::advance(StorageElement* pElement)
{
}

/******************************************************************************
* LOGIC EXHAUST :: TURN
******************************************************************************/
void LogicExhaust::turn(StorageElement* pElement)
{
}
